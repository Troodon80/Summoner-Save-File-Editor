<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAOfdCADnzQgA570IAQutCADnrQgA550IAOeNCADnfQgA520IAOfs5ADH7OQA59zkAMfc5ADnz
        OQAx8zkAOe85ADHvOQA56zkAMes5ADnnOQAx5zkAOeM5ADnfOQA52zkAMds5ADnXOQAx1zkAOdM5ADHT
        OQA5zzkAOcs5ADHLOQAxxzkAMfcxADHzMQAx7zEAKe8xADHrMQAp6zEAMecxACnnMQAp4zEAKd8xADHb
        MQAp1zEAMdMxACnPMQAxyzEAMccxACnHMQApwzEAMb4xADG6MQApujEAMbYxACm2MQAxsjEAKbIxACmu
        MQApqjEAKaYxACnnKQAp4ykAKd8pACnbKQAh2ykAKdcpACHXKQAp0ykAIdMpACHPKQApyykAIcspACnH
        KQAhxykAKcMpACHDKQApvikAIbopACm2KQAhtikAKbIpACGyKQAprikAIa4pACmqKQAhqikAKaYpACGm
        KQApoikAIaIpACmeKQAhnikAKZYpACGWKQAhkikAIc8hACHLIQAhxyEAIcMhACG+IQAYviEAIbohABi6
        IQAhtiEAGLYhACGyIQAYsiEAIa4hABiuIQAhqiEAGKohACGmIQAYpiEAIaIhACGeIQAYniEAIZohABia
        IQAhliEAGJYhACGSIQAYkiEAIY4hABiOIQAhiiEAGIohACGGIQAhgiEAGIIhACF9IQAYfSEAGHkhACF1
        IQAYdSEAGHEhABiuGAAYqhgAGKYYABiiGAAYnhgAGJoYABiWGAAQlhgAGJIYABiOGAAQjhgAGIoYABCK
        GAAYhhgAEIYYABiCGAAQghgAGH0YABB9GAAYeRgAEHkYABh1GAAYcRgAEHEYABhtGAAQbRgAGGkYABBp
        GAAYZRgAEGUYABhhGAAQYRgAEF0YABBZGAAQVRgAEH0QABB5EAAQdRAAEHEQABBtEAAQaRAAEGUQAAhl
        EAAQYRAACGEQABBdEAAIXRAAEFkQAAhZEAAQVRAACFUQABBREAAIURAAEE0QAAhNEAAQSRAACEkQABBF
        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
        AAHAAAAD4AAAB/AAAA/4AAAf
</value>
  </data>
</root>